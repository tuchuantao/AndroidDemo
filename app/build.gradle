apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.kevin.demo"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true // 强制打开R8编译器
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin_version}"
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Glide
    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    annotationProcessor "com.github.bumptech.glide:compiler:${versions.glide}"
    kapt "com.github.bumptech.glide:compiler:${versions.glide}"
    api "jp.wasabeef:glide-transformations:${versions.glidetrans}"
    implementation "com.github.bumptech.glide:okhttp3-integration:4.8.0"

    // RxJava
    implementation "io.reactivex.rxjava3:rxjava:${versions.rxjava}"
    implementation "io.reactivex.rxjava3:rxandroid:${versions.rxjava}"

    // Multidex
    implementation "androidx.multidex:multidex:${versions.multidex_version}"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    implementation "androidx.work:work-runtime:${versions.androidx.work}"
    implementation "androidx.work:work-testing:${versions.androidx.work}"
    implementation "androidx.work:work-runtime-ktx:${versions.androidx.work}"

    // fresco
    implementation "com.facebook.fresco:fresco:${versions.fresco.fresco}"
    implementation "com.facebook.fresco:animated-webp:${versions.fresco.webp_anim}"
    implementation "com.facebook.fresco:webpsupport:${versions.fresco.webp}"
    implementation "com.facebook.fresco:animated-drawable:${versions.fresco.drawable_anim}"

    implementation 'com.android.support:design:28.0.0'

    debugImplementation "com.squareup.leakcanary:leakcanary-android:${versions.leakcanary}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${versions.leakcanary}"
    // Optional, if you use support library fragments:
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:${versions.leakcanary}"

    // leakcanary 2.0以上
    //implementation 'com.squareup.leakcanary:leakcanary-object-watcher-android:2.2'

    // lottie
    implementation "com.airbnb.android:lottie:${versions.lottileVersion}"
}
